spring:
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
  shardingsphere:
    datasource:
      names: master,slave0 # 配置真实数据源
      master:
        type: com.zaxxer.hikari.HikariDataSource # 连接池配置
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/sharding_db_1?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&allowMultiQueries=true&useAffectedRows=true&serverTimezone=Asia/Shanghai
        username: username
        password: password
        hikari:
          minimum-idle: 5           # 最小连接数
          maximum-pool-size: 15     # 最大连接数
          auto-commit: true         # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
          idle-timeout: 30000       # 连接允许在池中闲置的最长时间，默认600000（10分钟），单位ms
          pool-name: UserHikariCP   # 连接池名称
          max-lifetime: 1800000     # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟，单位ms
          connection-timeout: 30000 # 数据库连接超时时间,默认30秒，即30000，单位ms
          connection-test-query: SELECT 1
      slave0:
        type: com.zaxxer.hikari.HikariDataSource # 连接池配置
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/sharding_db_2?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&allowMultiQueries=true&useAffectedRows=true&serverTimezone=Asia/Shanghai
        username: username
        password: password
        hikari:
          minimum-idle: 5           # 最小连接数
          maximum-pool-size: 15     # 最大连接数
          auto-commit: true         # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
          idle-timeout: 30000       # 连接允许在池中闲置的最长时间，默认600000（10分钟），单位ms
          pool-name: UserHikariCP   # 连接池名称
          max-lifetime: 1800000     # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟，单位ms
          connection-timeout: 30000 # 数据库连接超时时间,默认30秒，即30000，单位ms
          connection-test-query: SELECT 1
    masterslave: #读写配置
      name: ms
      # 从库的读取规则为round_robin（轮询策略），除了轮询策略，还有支持random（随机策略）
      load-balance-algorithm-type: round_robin
      master-data-source-name: master
      slave-data-source-names: slave0
    props: #打印sql
      sql:
        show: true

